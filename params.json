{"name":"Corridor","tagline":"A concurrent implementation of a genetic algorithm for the multi-objective corridor location problem written in Go","body":"### Introduction\r\nCorridor is library containing Go language functions for the implementation of a parallel + concurrent genetic algorithm for the multi-objective corridor location problem. This problem involves finding the least cost connected pathway through a discrete search domain in which each location is characterized by one or more costs. The library requires that the user provide a predefined search domain, objective functions, and some basic input parameters.\r\n\r\n### Installation\r\n\r\nThe project is hosted as a publicly available GitHub repository. Providing that your local client GOPATH and GOROOT variables have been previously defined, the repository can be cloned and built using the following single shell command: \r\n\r\n```\r\n$ go get github.com/ericdfournier/corridor\r\n```\r\n\r\n### Functionality\r\n\r\n\r\n### Examples\r\nExample 1: Convex Search Domain \r\nExample 2: Concave Search Domain\r\nExample 3: Obstructed Search Domain\r\n\r\n\r\n### Authors and Contributors\r\nThis project was developed by Eric Daniel Fournier [@ericdfournier] as part of his doctoral dissertation in the Environmental Science at the Bren School of Environmental Science at the University of California, Santa Barbara. The author would like to acknowledge the generous financial support of the Walton Family Foundation's Sustainable Water Markets Fellowship Program in making this development effort possible. \r\n\r\n### Support or Contact\r\nIf you have any questions about the usage of this library or would like to discuss the details of its implementation please email me@ericdfournier.com\r\nPlease submit bug reports and other feature requests as issues via the GitHub repo. \r\nThank you for your interest in this project!","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}